webpackJsonp([0xf7b56109d217c800],{"./node_modules/json-loader/index.js!./.cache/json/why-use-jointed.json":function(n,s){n.exports={data:{allPostTitles:{edges:[{node:{frontmatter:{title:"Hello World",lesson:1,chapter:1,type:"lesson"},fields:{slug:"/hello-world"}}},{node:{frontmatter:{title:"",lesson:null,chapter:null,type:null},fields:{slug:"/"}}},{node:{frontmatter:{title:"Introducing preset",lesson:2,chapter:1,type:"lesson"},fields:{slug:"/introducing-preset"}}},{node:{frontmatter:{title:"Action hook",lesson:4,chapter:1,type:"lesson"},fields:{slug:"/action-hook"}}},{node:{frontmatter:{title:"Post One",lesson:2,chapter:2,type:"post"},fields:{slug:"/post-one"}}},{node:{frontmatter:{title:"API",lesson:1,chapter:2,type:"lesson"},fields:{slug:"/api"}}},{node:{frontmatter:{title:"Why use jointed?",lesson:3,chapter:1,type:"lesson"},fields:{slug:"/why-use-jointed"}}},{node:{frontmatter:{title:"Jointed.js API",lesson:2,chapter:2,type:"lesson"},fields:{slug:"/jointed-js-api"}}}]},postBySlug:{html:'<p><a href="https://www.npmjs.com/package/clipped">Clipped.js</a> is directly integrated with <a href="https://www.npmjs.com/package/jointed">Jointed.js</a> , and recommends user to faciliate it.</p>\n<h4 id="reason-to-use-jointed"><a href="#reason-to-use-jointed" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Reason to use jointed</h4>\n<p>In Javascript it is very easy to read objects, but difficult to reliably edit an object.</p>\n<p>For instance if we have the current object:</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token punctuation">{</span>\n  user<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    posts<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">\'Foo\'</span><span class="token punctuation">,</span>\n        comments<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n          content<span class="token punctuation">:</span> <span class="token string">\'Nice!\'</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">\'Interesting...\'</span><span class="token punctuation">]</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'Bar\'</span><span class="token punctuation">,</span> comments<span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">\'Ok\'</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'Baz\'</span><span class="token punctuation">,</span> comments<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>To get a property we can just do</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code><span class="token keyword">const</span> interesting <span class="token operator">=</span> app<span class="token punctuation">.</span>user<span class="token punctuation">.</span>posts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>comments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>\n</code></pre>\n      </div>\n<p>As long as the schemea remains the same it is not a problem.</p>\n<p>But what if we want to delete the \'Interesting...\' comment, and add a property <code>author</code> as object to \'Nice!\'...\n...and then later want to set <code>author</code>\'s property <code>name</code> as \'Harry\'?</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code>app<span class="token punctuation">.</span>user<span class="token punctuation">.</span>posts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>comments<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n\napp<span class="token punctuation">.</span>user<span class="token punctuation">.</span>posts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>comments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>author <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n\napp<span class="token punctuation">.</span>user<span class="token punctuation">.</span>posts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>comments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>author<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">\'Harry\'</span>\n</code></pre>\n      </div>\n<blockquote>\n<p>Not that convenient huh?</p>\n</blockquote>\n<p>With Jointed we can just do something like</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code>app<span class="token punctuation">.</span>use<span class="token punctuation">.</span>posts<span class="token punctuation">.</span>foo<span class="token punctuation">.</span>comments\n  <span class="token punctuation">.</span><span class="token keyword">delete</span><span class="token punctuation">(</span><span class="token string">\'interesting\'</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span>nice\n    <span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">\'author\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span>author\n      <span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">\'name\'</span><span class="token punctuation">,</span> <span class="token string">\'Harry\'</span><span class="token punctuation">)</span>\n</code></pre>\n      </div>\n<p>You will see that instead of index, we use preset id\'s like <code>foo</code> and <code>nice</code> to access the properties in arrays.</p>\n<p>Also we are doing these modifications in one single statement, since all functions return the current instance.\nThis enables us to make furthur modifications in same context.</p>\n<h4 id="practical-usage"><a href="#practical-usage" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Practical usage</h4>\n<p>What makes Jointed shine is when we are changing configurations for Webpack, Rollup</p>\n<p>Take <a href="https://www.npmjs.com/package/clip-webpack-nodejs">Clipped\'s nodejs preset</a> as an example.</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code><span class="token comment" spellcheck="true">// Target webpack for nodejs</span>\nclipped<span class="token punctuation">.</span>config<span class="token punctuation">.</span>webpack\n  <span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">\'target\'</span><span class="token punctuation">,</span> <span class="token string">\'node\'</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">\'node\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    __filename<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    __dirname<span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">\'externals\'</span><span class="token punctuation">,</span> <span class="token function">nodeExternals</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    whitelist<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token regex">/\\.(eot|woff|woff2|ttf|otf)$/</span><span class="token punctuation">,</span>\n      <span class="token regex">/\\.(svg|png|jpg|jpeg|gif|ico|webm)$/</span><span class="token punctuation">,</span>\n      <span class="token regex">/\\.(mp4|mp3|ogg|swf|webp)$/</span><span class="token punctuation">,</span>\n      <span class="token regex">/\\.(css|scss|sass|less|styl)$/</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span>output\n    <span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">\'libraryTarget\'</span><span class="token punctuation">,</span> <span class="token string">\'commonjs2\'</span><span class="token punctuation">)</span>\n</code></pre>\n      </div>\n<p>Here we set multiple properties of webpack config, so that when later we come across this segment we immediately know that this is for targetting webpack towards nodejs.</p>\n<p>Maybe we want to set entry points also</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code>clipped<span class="token punctuation">.</span>config<span class="token punctuation">.</span>webpack\n  <span class="token punctuation">.</span>entry\n    <span class="token punctuation">.</span><span class="token function">mark</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span>vendor\n        <span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">\'reactjs\'</span><span class="token punctuation">,</span> <span class="token string">\'react\'</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">\'d3\'</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span>index\n        <span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">\'main\'</span><span class="token punctuation">,</span> <span class="token string">\'src/app.js\'</span><span class="token punctuation">)</span>\n\n<span class="token comment" spellcheck="true">/// later...</span>\n\nclipped<span class="token punctuation">.</span>config<span class="token punctuation">.</span>webpack\n  <span class="token punctuation">.</span>entry\n    <span class="token punctuation">.</span>vendor\n      <span class="token punctuation">.</span><span class="token keyword">delete</span><span class="token punctuation">(</span><span class="token string">\'reactjs\'</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">\'preactjs\'</span><span class="token punctuation">,</span> \'preact<span class="token punctuation">)</span>\n</code></pre>\n      </div>\n<blockquote>\n<p>Notice that we used <code>mark()</code> and <code>back()</code> here. They are like bookmarks so that you can reset to it after a property access.</p>\n</blockquote>\n<h5 id="disclaimer"><a href="#disclaimer" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Disclaimer</h5>\n<p>It is still 100% legit to directly assign</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code>clipped<span class="token punctuation">.</span>config<span class="token punctuation">.</span>webpack<span class="token punctuation">.</span>entry <span class="token operator">=</span> <span class="token punctuation">{</span>\n  index<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'src/main.js\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  vendor<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'vue\'</span><span class="token punctuation">,</span> <span class="token string">\'vue-router\'</span><span class="token punctuation">,</span> <span class="token string">\'skygear\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>For more about the API of <a href="https://www.npmjs.com/package/jointed">Jointed.js</a>, check out <a href="/api#preset">API</a> and <a href="/why-use-jointed">Why use jointed?</a> in later sections.</p>',timeToRead:2,excerpt:"Clipped.js  is directly integrated with  Jointed.js  , and recommends user to faciliate it. Reason to use jointed In Javascript it is very...",frontmatter:{title:"Why use jointed?",cover:null,date:null,category:null,tags:["guide"]},fields:{slug:"/why-use-jointed"}}},pathContext:{slug:"/why-use-jointed"}}}});
//# sourceMappingURL=path---why-use-jointed-023a37542bb246e028a6.js.map