webpackJsonp([0x76f8ecf8130e8800],{"./node_modules/json-loader/index.js!./.cache/json/introducing-preset.json":function(n,s){n.exports={data:{allPostTitles:{edges:[{node:{frontmatter:{title:"Hello World",lesson:1,chapter:1,type:"lesson"},fields:{slug:"/hello-world"}}},{node:{frontmatter:{title:"",lesson:null,chapter:null,type:null},fields:{slug:"/"}}},{node:{frontmatter:{title:"Introducing preset",lesson:2,chapter:1,type:"lesson"},fields:{slug:"/introducing-preset"}}},{node:{frontmatter:{title:"Action hook",lesson:3,chapter:1,type:"lesson"},fields:{slug:"/action-hook"}}},{node:{frontmatter:{title:"Post One",lesson:2,chapter:2,type:"post"},fields:{slug:"/post-one"}}},{node:{frontmatter:{title:"API",lesson:1,chapter:2,type:"lesson"},fields:{slug:"/api"}}}]},postBySlug:{html:'<p>A <strong>preset</strong> is whatever npm module that contains <strong>clipped.config.js</strong> file.</p>\n<blockquote>\n<p>Yup your project is already a preset!</p>\n</blockquote>\n<p>If you look into your project created in <a href="/hello-world">Hello World</a>, the <strong>clipped.config.js</strong> contains following content:</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token keyword">async</span> clipped <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    clipped<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'clipped-preset-webpack-frontend\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>Instead of an object, Clipped.js uses a function for configuration.</p>\n<h4 id="why-function"><a href="#why-function" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Why function?</h4>\n<p>Often we actually need to get something done before running the build tools.</p>\n<p>Maybe we need to do an API call to set the website title?\nMaybe we want to copy some files after a task? Function makes these cases just a breeze.</p>\n<p>Also with plain js objects it is less secure to override. For example with arrays you cannot really be sure if the array index corresponds to the content you want.</p>\n<p>With a standard way to manipulate previous presets, it is comparatively easier in a function, since in the end a function is a transformation from its given input to the output, what makes it even more neat is that you can run function after function to keep overriding.</p>\n<h4 id="clipped-argument"><a href="#clipped-argument" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>clipped</code> argument</h4>\n<p><code>clipped</code> contains the full API, and a <code>config</code> property that is an empty chainable object.</p>\n<p>For example to use Webpack and add support for <code>marko</code>, you may add:</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token keyword">async</span> clipped <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    clipped<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'clipped-preset-webpack-frontend\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    clipped<span class="token punctuation">.</span>config<span class="token punctuation">.</span>webpack\n      <span class="token punctuation">.</span>module\n         <span class="token punctuation">.</span>rules\n            <span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">\'marko\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n                test<span class="token punctuation">:</span> <span class="token regex">/\\.marko$/</span><span class="token punctuation">,</span>\n                include<span class="token punctuation">:</span> clipped<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'src\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                loader<span class="token punctuation">:</span> <span class="token string">\'marko-loader\'</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>For more about the API of <code>clipped</code> and how to use <code>config</code> chain,  check out <a href="/api#preset">API</a> and <a href="/collection-chain">collection-chain</a> in later sections.</p>',timeToRead:1,excerpt:"A  preset  is whatever npm module that contains  clipped.config.js  file. Yup your project is already a preset! If you look into your...",frontmatter:{title:"Introducing preset",cover:null,date:null,category:null,tags:["guide"]},fields:{slug:"/introducing-preset"}}},pathContext:{slug:"/introducing-preset"}}}});
//# sourceMappingURL=path---introducing-preset-4bb4f8fb99a6bbdb2037.js.map